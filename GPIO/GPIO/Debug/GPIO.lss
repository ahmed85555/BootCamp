
GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000047e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000504  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008a1  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066c  00000000  00000000  00000e69  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000582  00000000  00000000  000014d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ba  00000000  00000000  00001b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000233  00000000  00000000  00001f4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002181  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <main>
  64:	0c 94 3d 02 	jmp	0x47a	; 0x47a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay_ms>:
 *  Author: AVE-LAP-005
 */ 
#include "Types.h"


void delay_ms(uint32 N){
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	00 d0       	rcall	.+0      	; 0x72 <delay_ms+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <delay_ms+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	9c 83       	std	Y+4, r25	; 0x04
  7a:	8b 83       	std	Y+3, r24	; 0x03
	/* the nearest Number to 1 Millisecond if the cpu timer 1 MHZ is 29 for loop so we will multiple with 29 */
	
	for (int i=0;i<N*29;i++)
  7c:	1a 82       	std	Y+2, r1	; 0x02
  7e:	19 82       	std	Y+1, r1	; 0x01
  80:	05 c0       	rjmp	.+10     	; 0x8c <delay_ms+0x20>
  82:	89 81       	ldd	r24, Y+1	; 0x01
  84:	9a 81       	ldd	r25, Y+2	; 0x02
  86:	01 96       	adiw	r24, 0x01	; 1
  88:	9a 83       	std	Y+2, r25	; 0x02
  8a:	89 83       	std	Y+1, r24	; 0x01
  8c:	8b 81       	ldd	r24, Y+3	; 0x03
  8e:	9c 81       	ldd	r25, Y+4	; 0x04
  90:	4d e1       	ldi	r20, 0x1D	; 29
  92:	48 9f       	mul	r20, r24
  94:	90 01       	movw	r18, r0
  96:	49 9f       	mul	r20, r25
  98:	30 0d       	add	r19, r0
  9a:	11 24       	eor	r1, r1
  9c:	89 81       	ldd	r24, Y+1	; 0x01
  9e:	9a 81       	ldd	r25, Y+2	; 0x02
  a0:	82 17       	cp	r24, r18
  a2:	93 07       	cpc	r25, r19
  a4:	70 f3       	brcs	.-36     	; 0x82 <delay_ms+0x16>
	{
		
	}
	
  a6:	00 00       	nop
  a8:	0f 90       	pop	r0
  aa:	0f 90       	pop	r0
  ac:	0f 90       	pop	r0
  ae:	0f 90       	pop	r0
  b0:	df 91       	pop	r29
  b2:	cf 91       	pop	r28
  b4:	08 95       	ret

000000b6 <DIO_WritePin>:
	}
	
	return Get_Bit(Gpio->PIN,Local_Copyu8_Actuall_Pin);
	
	
}
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	00 d0       	rcall	.+0      	; 0xbc <DIO_WritePin+0x6>
  bc:	00 d0       	rcall	.+0      	; 0xbe <DIO_WritePin+0x8>
  be:	cd b7       	in	r28, 0x3d	; 61
  c0:	de b7       	in	r29, 0x3e	; 62
  c2:	8b 83       	std	Y+3, r24	; 0x03
  c4:	6c 83       	std	Y+4, r22	; 0x04
  c6:	1a 82       	std	Y+2, r1	; 0x02
  c8:	19 82       	std	Y+1, r1	; 0x01
  ca:	8b 81       	ldd	r24, Y+3	; 0x03
  cc:	88 30       	cpi	r24, 0x08	; 8
  ce:	28 f4       	brcc	.+10     	; 0xda <DIO_WritePin+0x24>
  d0:	89 e3       	ldi	r24, 0x39	; 57
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	9a 83       	std	Y+2, r25	; 0x02
  d6:	89 83       	std	Y+1, r24	; 0x01
  d8:	20 c0       	rjmp	.+64     	; 0x11a <DIO_WritePin+0x64>
  da:	8b 81       	ldd	r24, Y+3	; 0x03
  dc:	80 31       	cpi	r24, 0x10	; 16
  de:	40 f4       	brcc	.+16     	; 0xf0 <DIO_WritePin+0x3a>
  e0:	8b 81       	ldd	r24, Y+3	; 0x03
  e2:	88 30       	cpi	r24, 0x08	; 8
  e4:	28 f0       	brcs	.+10     	; 0xf0 <DIO_WritePin+0x3a>
  e6:	86 e3       	ldi	r24, 0x36	; 54
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	9a 83       	std	Y+2, r25	; 0x02
  ec:	89 83       	std	Y+1, r24	; 0x01
  ee:	15 c0       	rjmp	.+42     	; 0x11a <DIO_WritePin+0x64>
  f0:	8b 81       	ldd	r24, Y+3	; 0x03
  f2:	88 31       	cpi	r24, 0x18	; 24
  f4:	40 f4       	brcc	.+16     	; 0x106 <DIO_WritePin+0x50>
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	80 31       	cpi	r24, 0x10	; 16
  fa:	28 f0       	brcs	.+10     	; 0x106 <DIO_WritePin+0x50>
  fc:	83 e3       	ldi	r24, 0x33	; 51
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	9a 83       	std	Y+2, r25	; 0x02
 102:	89 83       	std	Y+1, r24	; 0x01
 104:	0a c0       	rjmp	.+20     	; 0x11a <DIO_WritePin+0x64>
 106:	8b 81       	ldd	r24, Y+3	; 0x03
 108:	80 32       	cpi	r24, 0x20	; 32
 10a:	38 f4       	brcc	.+14     	; 0x11a <DIO_WritePin+0x64>
 10c:	8b 81       	ldd	r24, Y+3	; 0x03
 10e:	88 31       	cpi	r24, 0x18	; 24
 110:	20 f0       	brcs	.+8      	; 0x11a <DIO_WritePin+0x64>
 112:	80 e3       	ldi	r24, 0x30	; 48
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	9a 83       	std	Y+2, r25	; 0x02
 118:	89 83       	std	Y+1, r24	; 0x01
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	9a 81       	ldd	r25, Y+2	; 0x02
 11e:	4b 81       	ldd	r20, Y+3	; 0x03
 120:	6c 81       	ldd	r22, Y+4	; 0x04
 122:	0e 94 9b 00 	call	0x136	; 0x136 <Apply>
 126:	00 00       	nop
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <Apply>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	00 d0       	rcall	.+0      	; 0x13c <Apply+0x6>
 13c:	00 d0       	rcall	.+0      	; 0x13e <Apply+0x8>
 13e:	1f 92       	push	r1
 140:	cd b7       	in	r28, 0x3d	; 61
 142:	de b7       	in	r29, 0x3e	; 62
 144:	9b 83       	std	Y+3, r25	; 0x03
 146:	8a 83       	std	Y+2, r24	; 0x02
 148:	6c 83       	std	Y+4, r22	; 0x04
 14a:	4d 83       	std	Y+5, r20	; 0x05
 14c:	19 82       	std	Y+1, r1	; 0x01
 14e:	8d 81       	ldd	r24, Y+5	; 0x05
 150:	88 30       	cpi	r24, 0x08	; 8
 152:	18 f4       	brcc	.+6      	; 0x15a <Apply+0x24>
 154:	8d 81       	ldd	r24, Y+5	; 0x05
 156:	89 83       	std	Y+1, r24	; 0x01
 158:	1d c0       	rjmp	.+58     	; 0x194 <Apply+0x5e>
 15a:	8d 81       	ldd	r24, Y+5	; 0x05
 15c:	80 31       	cpi	r24, 0x10	; 16
 15e:	38 f4       	brcc	.+14     	; 0x16e <Apply+0x38>
 160:	8d 81       	ldd	r24, Y+5	; 0x05
 162:	88 30       	cpi	r24, 0x08	; 8
 164:	20 f0       	brcs	.+8      	; 0x16e <Apply+0x38>
 166:	8d 81       	ldd	r24, Y+5	; 0x05
 168:	88 50       	subi	r24, 0x08	; 8
 16a:	89 83       	std	Y+1, r24	; 0x01
 16c:	13 c0       	rjmp	.+38     	; 0x194 <Apply+0x5e>
 16e:	8d 81       	ldd	r24, Y+5	; 0x05
 170:	88 31       	cpi	r24, 0x18	; 24
 172:	38 f4       	brcc	.+14     	; 0x182 <Apply+0x4c>
 174:	8d 81       	ldd	r24, Y+5	; 0x05
 176:	80 31       	cpi	r24, 0x10	; 16
 178:	20 f0       	brcs	.+8      	; 0x182 <Apply+0x4c>
 17a:	8d 81       	ldd	r24, Y+5	; 0x05
 17c:	80 51       	subi	r24, 0x10	; 16
 17e:	89 83       	std	Y+1, r24	; 0x01
 180:	09 c0       	rjmp	.+18     	; 0x194 <Apply+0x5e>
 182:	8d 81       	ldd	r24, Y+5	; 0x05
 184:	80 32       	cpi	r24, 0x20	; 32
 186:	30 f4       	brcc	.+12     	; 0x194 <Apply+0x5e>
 188:	8d 81       	ldd	r24, Y+5	; 0x05
 18a:	88 31       	cpi	r24, 0x18	; 24
 18c:	18 f0       	brcs	.+6      	; 0x194 <Apply+0x5e>
 18e:	8d 81       	ldd	r24, Y+5	; 0x05
 190:	88 51       	subi	r24, 0x18	; 24
 192:	89 83       	std	Y+1, r24	; 0x01
 194:	8c 81       	ldd	r24, Y+4	; 0x04
 196:	88 2f       	mov	r24, r24
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	00 97       	sbiw	r24, 0x00	; 0
 19c:	c9 f0       	breq	.+50     	; 0x1d0 <Apply+0x9a>
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	09 f0       	breq	.+2      	; 0x1a4 <Apply+0x6e>
 1a2:	2d c0       	rjmp	.+90     	; 0x1fe <Apply+0xc8>
 1a4:	8a 81       	ldd	r24, Y+2	; 0x02
 1a6:	9b 81       	ldd	r25, Y+3	; 0x03
 1a8:	fc 01       	movw	r30, r24
 1aa:	82 81       	ldd	r24, Z+2	; 0x02
 1ac:	48 2f       	mov	r20, r24
 1ae:	89 81       	ldd	r24, Y+1	; 0x01
 1b0:	28 2f       	mov	r18, r24
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <Apply+0x88>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	2a 95       	dec	r18
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <Apply+0x84>
 1c2:	84 2b       	or	r24, r20
 1c4:	28 2f       	mov	r18, r24
 1c6:	8a 81       	ldd	r24, Y+2	; 0x02
 1c8:	9b 81       	ldd	r25, Y+3	; 0x03
 1ca:	fc 01       	movw	r30, r24
 1cc:	22 83       	std	Z+2, r18	; 0x02
 1ce:	17 c0       	rjmp	.+46     	; 0x1fe <Apply+0xc8>
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	9b 81       	ldd	r25, Y+3	; 0x03
 1d4:	fc 01       	movw	r30, r24
 1d6:	82 81       	ldd	r24, Z+2	; 0x02
 1d8:	48 2f       	mov	r20, r24
 1da:	89 81       	ldd	r24, Y+1	; 0x01
 1dc:	28 2f       	mov	r18, r24
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <Apply+0xb4>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	2a 95       	dec	r18
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <Apply+0xb0>
 1ee:	80 95       	com	r24
 1f0:	84 23       	and	r24, r20
 1f2:	28 2f       	mov	r18, r24
 1f4:	8a 81       	ldd	r24, Y+2	; 0x02
 1f6:	9b 81       	ldd	r25, Y+3	; 0x03
 1f8:	fc 01       	movw	r30, r24
 1fa:	22 83       	std	Z+2, r18	; 0x02
 1fc:	00 00       	nop
 1fe:	00 00       	nop
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	08 95       	ret

00000210 <DIO_SetPinDirection>:
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection){
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	00 d0       	rcall	.+0      	; 0x216 <DIO_SetPinDirection+0x6>
 216:	00 d0       	rcall	.+0      	; 0x218 <DIO_SetPinDirection+0x8>
 218:	cd b7       	in	r28, 0x3d	; 61
 21a:	de b7       	in	r29, 0x3e	; 62
 21c:	8b 83       	std	Y+3, r24	; 0x03
 21e:	6c 83       	std	Y+4, r22	; 0x04
	uint8* Local_Copy_Address=0;
 220:	1a 82       	std	Y+2, r1	; 0x02
 222:	19 82       	std	Y+1, r1	; 0x01
	if ((PinNum<=pin7) && (PinNum>=pin0))
 224:	8b 81       	ldd	r24, Y+3	; 0x03
 226:	88 30       	cpi	r24, 0x08	; 8
 228:	28 f4       	brcc	.+10     	; 0x234 <DIO_SetPinDirection+0x24>
	{
		Local_Copy_Address=GPIOA_DIO;
 22a:	89 e3       	ldi	r24, 0x39	; 57
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	9a 83       	std	Y+2, r25	; 0x02
 230:	89 83       	std	Y+1, r24	; 0x01
 232:	20 c0       	rjmp	.+64     	; 0x274 <DIO_SetPinDirection+0x64>
	}
	else if ((PinNum<=pin15) && (PinNum>=pin8))
 234:	8b 81       	ldd	r24, Y+3	; 0x03
 236:	80 31       	cpi	r24, 0x10	; 16
 238:	40 f4       	brcc	.+16     	; 0x24a <DIO_SetPinDirection+0x3a>
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	88 30       	cpi	r24, 0x08	; 8
 23e:	28 f0       	brcs	.+10     	; 0x24a <DIO_SetPinDirection+0x3a>
	{
		Local_Copy_Address=GPIOB_DIO;
 240:	86 e3       	ldi	r24, 0x36	; 54
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	9a 83       	std	Y+2, r25	; 0x02
 246:	89 83       	std	Y+1, r24	; 0x01
 248:	15 c0       	rjmp	.+42     	; 0x274 <DIO_SetPinDirection+0x64>
	}
	else if ((PinNum<=pin23) && (PinNum>=pin16))
 24a:	8b 81       	ldd	r24, Y+3	; 0x03
 24c:	88 31       	cpi	r24, 0x18	; 24
 24e:	40 f4       	brcc	.+16     	; 0x260 <DIO_SetPinDirection+0x50>
 250:	8b 81       	ldd	r24, Y+3	; 0x03
 252:	80 31       	cpi	r24, 0x10	; 16
 254:	28 f0       	brcs	.+10     	; 0x260 <DIO_SetPinDirection+0x50>
	{
		Local_Copy_Address=GPIOC_DIO;
 256:	83 e3       	ldi	r24, 0x33	; 51
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	9a 83       	std	Y+2, r25	; 0x02
 25c:	89 83       	std	Y+1, r24	; 0x01
 25e:	0a c0       	rjmp	.+20     	; 0x274 <DIO_SetPinDirection+0x64>
	}else if ((PinNum<=pin31) && (PinNum>=pin24))
 260:	8b 81       	ldd	r24, Y+3	; 0x03
 262:	80 32       	cpi	r24, 0x20	; 32
 264:	38 f4       	brcc	.+14     	; 0x274 <DIO_SetPinDirection+0x64>
 266:	8b 81       	ldd	r24, Y+3	; 0x03
 268:	88 31       	cpi	r24, 0x18	; 24
 26a:	20 f0       	brcs	.+8      	; 0x274 <DIO_SetPinDirection+0x64>
	{
		Local_Copy_Address=GPIOD_DIO;
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	9a 83       	std	Y+2, r25	; 0x02
 272:	89 83       	std	Y+1, r24	; 0x01
	}
	
	Apply_Dir(Local_Copy_Address,PinNum,PinDirection);
 274:	89 81       	ldd	r24, Y+1	; 0x01
 276:	9a 81       	ldd	r25, Y+2	; 0x02
 278:	4c 81       	ldd	r20, Y+4	; 0x04
 27a:	6b 81       	ldd	r22, Y+3	; 0x03
 27c:	0e 94 48 01 	call	0x290	; 0x290 <Apply_Dir>
	
}
 280:	00 00       	nop
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	08 95       	ret

00000290 <Apply_Dir>:


static Apply_Dir(GPIO* Gpio,uint8 PinNum,uint8 PinDirection){
 290:	cf 93       	push	r28
 292:	df 93       	push	r29
 294:	00 d0       	rcall	.+0      	; 0x296 <Apply_Dir+0x6>
 296:	00 d0       	rcall	.+0      	; 0x298 <Apply_Dir+0x8>
 298:	1f 92       	push	r1
 29a:	cd b7       	in	r28, 0x3d	; 61
 29c:	de b7       	in	r29, 0x3e	; 62
 29e:	9b 83       	std	Y+3, r25	; 0x03
 2a0:	8a 83       	std	Y+2, r24	; 0x02
 2a2:	6c 83       	std	Y+4, r22	; 0x04
 2a4:	4d 83       	std	Y+5, r20	; 0x05
	
	uint8 Local_Copyu8_Actuall_Pin=0;
 2a6:	19 82       	std	Y+1, r1	; 0x01
	if ((PinNum<=pin7) && (PinNum>=pin0))
 2a8:	8c 81       	ldd	r24, Y+4	; 0x04
 2aa:	88 30       	cpi	r24, 0x08	; 8
 2ac:	18 f4       	brcc	.+6      	; 0x2b4 <Apply_Dir+0x24>
	{
		Local_Copyu8_Actuall_Pin=PinNum;
 2ae:	8c 81       	ldd	r24, Y+4	; 0x04
 2b0:	89 83       	std	Y+1, r24	; 0x01
 2b2:	1d c0       	rjmp	.+58     	; 0x2ee <Apply_Dir+0x5e>
	}
	else if ((PinNum<=pin15) && (PinNum>=pin8))
 2b4:	8c 81       	ldd	r24, Y+4	; 0x04
 2b6:	80 31       	cpi	r24, 0x10	; 16
 2b8:	38 f4       	brcc	.+14     	; 0x2c8 <Apply_Dir+0x38>
 2ba:	8c 81       	ldd	r24, Y+4	; 0x04
 2bc:	88 30       	cpi	r24, 0x08	; 8
 2be:	20 f0       	brcs	.+8      	; 0x2c8 <Apply_Dir+0x38>
	{
		Local_Copyu8_Actuall_Pin=PinNum-8;
 2c0:	8c 81       	ldd	r24, Y+4	; 0x04
 2c2:	88 50       	subi	r24, 0x08	; 8
 2c4:	89 83       	std	Y+1, r24	; 0x01
 2c6:	13 c0       	rjmp	.+38     	; 0x2ee <Apply_Dir+0x5e>
	}
	else if ((PinNum<=pin23) && (PinNum>=pin16))
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ca:	88 31       	cpi	r24, 0x18	; 24
 2cc:	38 f4       	brcc	.+14     	; 0x2dc <Apply_Dir+0x4c>
 2ce:	8c 81       	ldd	r24, Y+4	; 0x04
 2d0:	80 31       	cpi	r24, 0x10	; 16
 2d2:	20 f0       	brcs	.+8      	; 0x2dc <Apply_Dir+0x4c>
	{
		Local_Copyu8_Actuall_Pin=PinNum-16;
 2d4:	8c 81       	ldd	r24, Y+4	; 0x04
 2d6:	80 51       	subi	r24, 0x10	; 16
 2d8:	89 83       	std	Y+1, r24	; 0x01
 2da:	09 c0       	rjmp	.+18     	; 0x2ee <Apply_Dir+0x5e>
	}else if ((PinNum<=pin31) && (PinNum>=pin24))
 2dc:	8c 81       	ldd	r24, Y+4	; 0x04
 2de:	80 32       	cpi	r24, 0x20	; 32
 2e0:	30 f4       	brcc	.+12     	; 0x2ee <Apply_Dir+0x5e>
 2e2:	8c 81       	ldd	r24, Y+4	; 0x04
 2e4:	88 31       	cpi	r24, 0x18	; 24
 2e6:	18 f0       	brcs	.+6      	; 0x2ee <Apply_Dir+0x5e>
	{
		Local_Copyu8_Actuall_Pin=PinNum-24;
 2e8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ea:	88 51       	subi	r24, 0x18	; 24
 2ec:	89 83       	std	Y+1, r24	; 0x01
	}
	switch(PinDirection){
 2ee:	8d 81       	ldd	r24, Y+5	; 0x05
 2f0:	88 2f       	mov	r24, r24
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	81 30       	cpi	r24, 0x01	; 1
 2f6:	91 05       	cpc	r25, r1
 2f8:	99 f1       	breq	.+102    	; 0x360 <Apply_Dir+0xd0>
 2fa:	82 30       	cpi	r24, 0x02	; 2
 2fc:	91 05       	cpc	r25, r1
 2fe:	09 f4       	brne	.+2      	; 0x302 <Apply_Dir+0x72>
 300:	5c c0       	rjmp	.+184    	; 0x3ba <Apply_Dir+0x12a>
 302:	89 2b       	or	r24, r25
 304:	09 f0       	breq	.+2      	; 0x308 <Apply_Dir+0x78>
 306:	6f c0       	rjmp	.+222    	; 0x3e6 <Apply_Dir+0x156>
		case Input_PUll_UP:Clear_Bit(Gpio->DDR,Local_Copyu8_Actuall_Pin);Set_Bit(Gpio->PORT,Local_Copyu8_Actuall_Pin); break;
 308:	8a 81       	ldd	r24, Y+2	; 0x02
 30a:	9b 81       	ldd	r25, Y+3	; 0x03
 30c:	fc 01       	movw	r30, r24
 30e:	81 81       	ldd	r24, Z+1	; 0x01
 310:	48 2f       	mov	r20, r24
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	28 2f       	mov	r18, r24
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	02 c0       	rjmp	.+4      	; 0x322 <Apply_Dir+0x92>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	2a 95       	dec	r18
 324:	e2 f7       	brpl	.-8      	; 0x31e <Apply_Dir+0x8e>
 326:	80 95       	com	r24
 328:	84 23       	and	r24, r20
 32a:	28 2f       	mov	r18, r24
 32c:	8a 81       	ldd	r24, Y+2	; 0x02
 32e:	9b 81       	ldd	r25, Y+3	; 0x03
 330:	fc 01       	movw	r30, r24
 332:	21 83       	std	Z+1, r18	; 0x01
 334:	8a 81       	ldd	r24, Y+2	; 0x02
 336:	9b 81       	ldd	r25, Y+3	; 0x03
 338:	fc 01       	movw	r30, r24
 33a:	82 81       	ldd	r24, Z+2	; 0x02
 33c:	48 2f       	mov	r20, r24
 33e:	89 81       	ldd	r24, Y+1	; 0x01
 340:	28 2f       	mov	r18, r24
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	02 c0       	rjmp	.+4      	; 0x34e <Apply_Dir+0xbe>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	2a 95       	dec	r18
 350:	e2 f7       	brpl	.-8      	; 0x34a <Apply_Dir+0xba>
 352:	84 2b       	or	r24, r20
 354:	28 2f       	mov	r18, r24
 356:	8a 81       	ldd	r24, Y+2	; 0x02
 358:	9b 81       	ldd	r25, Y+3	; 0x03
 35a:	fc 01       	movw	r30, r24
 35c:	22 83       	std	Z+2, r18	; 0x02
 35e:	43 c0       	rjmp	.+134    	; 0x3e6 <Apply_Dir+0x156>
		case INPUT_WITHOUT_PULL:Clear_Bit(Gpio->DDR,Local_Copyu8_Actuall_Pin);Clear_Bit(Gpio->PORT,Local_Copyu8_Actuall_Pin); break;
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	9b 81       	ldd	r25, Y+3	; 0x03
 364:	fc 01       	movw	r30, r24
 366:	81 81       	ldd	r24, Z+1	; 0x01
 368:	48 2f       	mov	r20, r24
 36a:	89 81       	ldd	r24, Y+1	; 0x01
 36c:	28 2f       	mov	r18, r24
 36e:	30 e0       	ldi	r19, 0x00	; 0
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <Apply_Dir+0xea>
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	2a 95       	dec	r18
 37c:	e2 f7       	brpl	.-8      	; 0x376 <Apply_Dir+0xe6>
 37e:	80 95       	com	r24
 380:	84 23       	and	r24, r20
 382:	28 2f       	mov	r18, r24
 384:	8a 81       	ldd	r24, Y+2	; 0x02
 386:	9b 81       	ldd	r25, Y+3	; 0x03
 388:	fc 01       	movw	r30, r24
 38a:	21 83       	std	Z+1, r18	; 0x01
 38c:	8a 81       	ldd	r24, Y+2	; 0x02
 38e:	9b 81       	ldd	r25, Y+3	; 0x03
 390:	fc 01       	movw	r30, r24
 392:	82 81       	ldd	r24, Z+2	; 0x02
 394:	48 2f       	mov	r20, r24
 396:	89 81       	ldd	r24, Y+1	; 0x01
 398:	28 2f       	mov	r18, r24
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <Apply_Dir+0x116>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	2a 95       	dec	r18
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <Apply_Dir+0x112>
 3aa:	80 95       	com	r24
 3ac:	84 23       	and	r24, r20
 3ae:	28 2f       	mov	r18, r24
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	9b 81       	ldd	r25, Y+3	; 0x03
 3b4:	fc 01       	movw	r30, r24
 3b6:	22 83       	std	Z+2, r18	; 0x02
 3b8:	16 c0       	rjmp	.+44     	; 0x3e6 <Apply_Dir+0x156>
		case OUTPUT:Set_Bit(Gpio->DDR,Local_Copyu8_Actuall_Pin);break;
 3ba:	8a 81       	ldd	r24, Y+2	; 0x02
 3bc:	9b 81       	ldd	r25, Y+3	; 0x03
 3be:	fc 01       	movw	r30, r24
 3c0:	81 81       	ldd	r24, Z+1	; 0x01
 3c2:	48 2f       	mov	r20, r24
 3c4:	89 81       	ldd	r24, Y+1	; 0x01
 3c6:	28 2f       	mov	r18, r24
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <Apply_Dir+0x144>
 3d0:	88 0f       	add	r24, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	2a 95       	dec	r18
 3d6:	e2 f7       	brpl	.-8      	; 0x3d0 <Apply_Dir+0x140>
 3d8:	84 2b       	or	r24, r20
 3da:	28 2f       	mov	r18, r24
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	9b 81       	ldd	r25, Y+3	; 0x03
 3e0:	fc 01       	movw	r30, r24
 3e2:	21 83       	std	Z+1, r18	; 0x01
 3e4:	00 00       	nop
		
		
	}
	
 3e6:	00 00       	nop
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	0f 90       	pop	r0
 3ee:	0f 90       	pop	r0
 3f0:	0f 90       	pop	r0
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	08 95       	ret

000003f8 <main>:
#include "BitwiseOperations.h"
#include "DIO_Interface.h"
#include "delay.h"

int main(void)
{
 3f8:	cf 93       	push	r28
 3fa:	df 93       	push	r29
 3fc:	cd b7       	in	r28, 0x3d	; 61
 3fe:	de b7       	in	r29, 0x3e	; 62
	
	DIO_SetPinDirection(pin13,OUTPUT);
 400:	62 e0       	ldi	r22, 0x02	; 2
 402:	8d e0       	ldi	r24, 0x0D	; 13
 404:	0e 94 08 01 	call	0x210	; 0x210 <DIO_SetPinDirection>
	DIO_SetPinDirection(pin14,OUTPUT);
 408:	62 e0       	ldi	r22, 0x02	; 2
 40a:	8e e0       	ldi	r24, 0x0E	; 14
 40c:	0e 94 08 01 	call	0x210	; 0x210 <DIO_SetPinDirection>
	DIO_SetPinDirection(pin15,OUTPUT);
 410:	62 e0       	ldi	r22, 0x02	; 2
 412:	8f e0       	ldi	r24, 0x0F	; 15
 414:	0e 94 08 01 	call	0x210	; 0x210 <DIO_SetPinDirection>
	while(1)
	{
	DIO_WritePin(pin13,High);
 418:	61 e0       	ldi	r22, 0x01	; 1
 41a:	8d e0       	ldi	r24, 0x0D	; 13
 41c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 420:	80 ed       	ldi	r24, 0xD0	; 208
 422:	97 e0       	ldi	r25, 0x07	; 7
 424:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	DIO_WritePin(pin13,LOW);
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	8d e0       	ldi	r24, 0x0D	; 13
 42c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 430:	80 ed       	ldi	r24, 0xD0	; 208
 432:	97 e0       	ldi	r25, 0x07	; 7
 434:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	DIO_WritePin(pin15,High);
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	8f e0       	ldi	r24, 0x0F	; 15
 43c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 440:	80 ed       	ldi	r24, 0xD0	; 208
 442:	97 e0       	ldi	r25, 0x07	; 7
 444:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	DIO_WritePin(pin15,LOW);
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	8f e0       	ldi	r24, 0x0F	; 15
 44c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 450:	80 ed       	ldi	r24, 0xD0	; 208
 452:	97 e0       	ldi	r25, 0x07	; 7
 454:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	DIO_WritePin(pin14,High);
 458:	61 e0       	ldi	r22, 0x01	; 1
 45a:	8e e0       	ldi	r24, 0x0E	; 14
 45c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 460:	80 ed       	ldi	r24, 0xD0	; 208
 462:	97 e0       	ldi	r25, 0x07	; 7
 464:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	DIO_WritePin(pin14,LOW);
 468:	60 e0       	ldi	r22, 0x00	; 0
 46a:	8e e0       	ldi	r24, 0x0E	; 14
 46c:	0e 94 5b 00 	call	0xb6	; 0xb6 <DIO_WritePin>
	delay_ms(2000);
 470:	80 ed       	ldi	r24, 0xD0	; 208
 472:	97 e0       	ldi	r25, 0x07	; 7
 474:	0e 94 36 00 	call	0x6c	; 0x6c <delay_ms>
	
	
   
}
 478:	cf cf       	rjmp	.-98     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>

0000047a <_exit>:
 47a:	f8 94       	cli

0000047c <__stop_program>:
 47c:	ff cf       	rjmp	.-2      	; 0x47c <__stop_program>
